#!/bin/bash

# set ROOT at where the script located
export POND_RC=~/.pondrc
export POND_HOME=~/pond-modules
# zh, en or other two bytes lang code is accepted
#export POND_LANG=$(LANG:0:2}  # based on system LANG
export POND_LANG=zh


ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
export POND_ROOT=$ROOT
export OSTYPE=`$ROOT/bin/os-type`
export POND_SERVER="server.doc.run"
if [ "$POND_SERVER" == "127.0.0.1" ]; then
    export POND_URL="http://192.168.55.5:88"
elif [ "$POND_SERVER" == "server.doc.run" ]; then
    export POND_URL="https://doc.run"
else
    export POND_URL="https://${POND_SERVER}"
fi

if [ -f ~/.pond.user.auth ]; then
    chmod +r ~/.pond.user.auth
    export POND_AUTHOR="`json-item ~/.pond.user.auth nickname`"
fi

alias evil="emacs -l ${POND_ROOT}/etc/emacs/init.el -nw "
alias evilc="emacsclient --tty "

#function evil(){
#    emacs -l ${POND_ROOT}/etc/emacs/init.el -nw $@
#}
#
#function evilc(){
#    emacsclient --tty $@
#}

export POND_GIT_CMD="GIT_SSH_COMMAND='ssh -i ${POND_HOME}/.git_private_key' git -c user.name='$POND_AUTHOR' -c user.email='${POND_AUTHOR}@doc.run' "

function pond_git(){
    GIT_SSH_COMMAND="ssh -i ${POND_HOME}/.git_private_key" git -c user.name="$POND_AUTHOR" -c user.email="${POND_AUTHOR}@doc.run" $@
}

alias update-pond=" source <(curl -s -S -L ${POND_URL}/pond/static/phpp_deploy.sh)"

#load program command 
function pond-load() { source $POND_ROOT/bin/pond-load-env $@; }

#load program command in silent mode
function pond-load-silent() { source $POND_ROOT/bin/pond-load-env-silent $@; }

#if no gpu the declare with command no_gpu_env
function no_gpu_env() { export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$POND_ROOT/templibs; }


function add_include()
{ 
  #echo deal include $*
  local t_dir_var
  for t_dir_var in $* ; do 
    if [ -d $POND_ROOT/$t_dir_var ];then
      POND_INCLUDE_PATH=$POND_ROOT/$t_dir_var:$POND_INCLUDE_PATH
      break
    elif [ -d $t_dir_var ];then
      POND_INCLUDE_PATH=$t_dir_var:$POND_INCLUDE_PATH
      break
    fi
  done; 
  export POND_INCLUDE_PATH
}

function add_lib()
{ 
  #echo deal lib $*
  local t_dir_var
  for t_dir_var in $* ; do 
    #echo 'lib deal ' $t_dir_var
    if [ -d $POND_ROOT/$t_dir_var ];then
      LD_LIBRARY_PATH=$POND_ROOT/$t_dir_var:$LD_LIBRARY_PATH
      POND_LIBRARY_PATH=$POND_ROOT/$t_dir_var:$POND_LIBRARY_PATH
      break
    elif [ -d $t_dir_var ];then
      LD_LIBRARY_PATH=$t_dir_var:$LD_LIBRARY_PATH
      POND_LIBRARY_PATH=$t_dir_var:$POND_LIBRARY_PATH
      break
    fi
  done; 
  export LD_LIBRARY_PATH
  export POND_LIBRARY_PATH
}

function add_path()
{ 
  #echo 'path deal ' $t_dir_var
  local t_dir_var
  for t_dir_var in $* ; do 
    if [ -d $POND_ROOT/$t_dir_var ];then
      PATH=$POND_ROOT/$t_dir_var:$PATH
      break
    elif [ -d $t_dir_var ];then
      PATH=$t_dir_var:$PATH
      break
    fi
  done; 
  export PATH
}

function add_dir()
{ 
  #echo try add dir $*
  local t_dir_var
  for t_dir_var in $* ; do  
    #echo dir deal $t_dir_var
    add_include $t_dir_var/include
    add_lib     $t_dir_var/lib
    add_lib     $t_dir_var/lib64
    add_path    $t_dir_var/bin
  done; 
}

function add_pypath()
{ 
  local t_dir_var
  for t_dir_var in $* ; do 
    if [ -d $POND_ROOT/$t_dir_var ];then
      PYTHONPATH=$POND_ROOT/$t_dir_var:$PYTHONPATH
      break
    elif [ -d $t_dir_var ];then
      PYTHONPATH=$t_dir_var:$PYTHONPATH
      break
    fi
  done; 
  export PYTHONPATH
}

function add_matlab()
{ 
    TMP_ROOT=$1
    MATLAB_ROOT=$TMP_ROOT
    if [ -d $MATLAB_ROOT ];then
        export MATLAB_ROOT
        add_include $TMP_ROOT/extern/include
        add_path $TMP_ROOT/bin
        add_lib $TMP_ROOT/bin/glnxa64/ 
        add_lib $TMP_ROOT/sys/os/glnxa64/

    fi
}

function add_mathematica()
{ 
    TMP_ROOT=$1
    MATHEMATICA_ROOT=$TMP_ROOT
    if [ -d $MATHEMATICA_ROOT ];then
        export MATHEMATICA_ROOT
        add_path $TMP_ROOT/Executables/
        add_lib $TMP_ROOT/SystemFiles/Links/MathLink/DeveloperKit/Linux-x86-64/CompilerAdditions
        add_include $TMP_ROOT/SystemFiles/Links/MathLink/DeveloperKit/Linux-x86-64/CompilerAdditions

    fi
}

export PKG_CONFIG_PATH=$POND_ROOT/pkgconfig/:$PKG_CONFIG_PATH

add_dir      $POND_ROOT
add_path     $POND_ROOT/lib
add_pypath   $POND_ROOT/scripts

add_dir      $POND_ROOT/packages
#add_dir      $POND_ROOT/packages/openmpi
#add_dir       /usr/local/cuda
#add_include   /usr/include/openmpi/

py_inc=`find /usr/include/ -type d -name "python3.*"`
add_include $py_inc
py_inc=`find /usr/lib/ -type d -name "python3.*"`
py_lib=`find $py_inc -type d -name "config*"`
add_lib $py_lib

source $POND_ROOT/env.source.local
